<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Ozole" failures="0" tests="13" name="Default test" time="0.192" errors="0" timestamp="2023-05-13T21:16:56 IST">
  <testcase classname="TestNG.TestNG1" name="@BeforeSuite setUpDriver" time="0.128">
    <failure type="org.openqa.selenium.WebDriverException" message="Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: XP
Build info: version: &amp;apos;4.0.0-alpha-6&amp;apos;, revision: &amp;apos;5f43a29cfc&amp;apos;
System info: host: &amp;apos;OZOLE&amp;apos;, ip: &amp;apos;192.168.137.1&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1.1&amp;apos;
Driver info: driver.version: FirefoxDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: XP
Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc'
System info: host: 'OZOLE', ip: '192.168.137.1', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: driver.version: FirefoxDriver
at org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:95)
at java.base/java.util.Optional.orElseGet(Optional.java:364)
at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:199)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.withOptions(GeckoDriverService.java:180)
at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:206)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:176)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:154)
at TestNG.TestNG1.setUpDriver(TestNG1.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:327)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeSuite setUpDriver -->
  <testcase classname="TestNG.TestNG1" name="@BeforeTest launchURL" time="-1.683992815788E9">
    <skipped/>
  </testcase> <!-- @BeforeTest launchURL -->
  <testcase classname="TestNG.TestNG2" name="@BeforeClass beforeClass" time="-1.683992815874E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="TestNG.TestNG2" name="@BeforeMethod beforeMethod" time="-1.683992815878E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestNG.TestNG2" name="@AfterMethod afterMethod" time="-1.683992815888E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestNG.TestNG2" name="@BeforeMethod beforeMethod" time="-1.683992815895E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestNG.TestNG2" name="@AfterMethod afterMethod" time="-1.683992815902E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestNG.TestNG2" name="@AfterClass afterClass" time="-1.683992815904E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="SeleniumWaits.ImplicitWait" name="@BeforeMethod setUp" time="-1.683992815909E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="SeleniumWaits.ImplicitWait" name="@AfterMethod tearDown" time="-1.683992815925E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="TestNG.TestNG1" name="@AfterTest testResult" time="-1.683992815967E9">
    <skipped/>
  </testcase> <!-- @AfterTest testResult -->
  <testcase classname="TestNG.TestNGGroup" name="Bajaj" time="0.0">
    <skipped/>
  </testcase> <!-- Bajaj -->
  <testcase classname="TestNG.TestNGPriority" name="Russia" time="0.0">
    <skipped/>
  </testcase> <!-- Russia -->
  <testcase classname="Robot.RobotFileUpload" name="fileUpload" time="0.0">
    <skipped/>
  </testcase> <!-- fileUpload -->
  <testcase classname="TestNG.TestNG1" name="getTittle" time="0.0">
    <skipped/>
  </testcase> <!-- getTittle -->
  <testcase classname="Actions.ActionKeyboardEvents" name="keyBoardEvents_whenSuccess" time="0.0">
    <skipped/>
  </testcase> <!-- keyBoardEvents_whenSuccess -->
  <testcase classname="TestNG.TestNGGroup" name="mahindra" time="0.0">
    <skipped/>
  </testcase> <!-- mahindra -->
  <testcase classname="TestNG.TestNGGroup" name="sedan" time="0.0">
    <skipped/>
  </testcase> <!-- sedan -->
  <testcase classname="TestNG.TestNG2" name="test1" time="0.0">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase classname="TestNG.TestNG2" name="test2" time="0.0">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase classname="SeleniumWaits.ImplicitWait" name="testUntitled" time="0.0">
    <skipped/>
  </testcase> <!-- testUntitled -->
  <testcase classname="TestNG.TestNGPriority" name="china" time="0.0">
    <skipped/>
  </testcase> <!-- china -->
  <testcase classname="TestNG.TestNGPriority" name="India" time="0.0">
    <skipped/>
  </testcase> <!-- India -->
  <testcase classname="TestNG.TestNGPriority" name="Nepal" time="0.0">
    <skipped/>
  </testcase> <!-- Nepal -->
</testsuite> <!-- Default test -->
